<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">

<chapter id="gettingstarted">
    <title>Getting Started</title>
   
    <para>
        In this chapter you will learn how to add 
        <emphasis>Conventions </emphasis> and its related dependencies to your project in three ways: 
    </para>
    <itemizedlist>
        <listitem>
            Using maven 
        </listitem>
        <listitem>
            Without maven
        </listitem>
        <listitem>
            Scaffolding
        </listitem>
    </itemizedlist>
    <section>
        <title>Using maven</title>
        <section id="mvn-dependencies">
            <title>Declaring maven dependencies</title>
            <para>Here is the full list of Conventions framework maven dependencies</para>
            <programlisting role="XML"><![CDATA[         

            <dependencies>        
               <!-- Java EE -->
            <dependency>
                <groupId>javax</groupId>
                    <artifactId>javaee-web-api</artifactId>
                    <version>6.0</version>
                    <scope>provided</scope>
                </dependency>
            <dependency>
                <groupId>com.sun.faces</groupId>
                <artifactId>jsf-api</artifactId>
                <version>2.x</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>com.sun.faces</groupId>
                <artifactId>jsf-impl</artifactId>
                <version>2.x</version>
                <scope>provided</scope>
            </dependency> 
            <dependency>
                <groupId>javax.el</groupId>
                <artifactId>el-api</artifactId>
                <version>2.2.1-b04</version>
                <scope>provided</scope>
            </dependency>
        
            <dependency>
                <groupId>javax.enterprise</groupId>
                <artifactId>cdi-api</artifactId>
                <version>1.0</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>javax.inject</groupId>
                <artifactId>javax.inject</artifactId>
                <version>1</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.myfaces.extensions.cdi.bundles</groupId>
                <artifactId>myfaces-extcdi-bundle-jsf20</artifactId>
                <version>1.0.5</version>
            </dependency>
            <!-- end JavaEE -->
            <!-- conventions -->
            <dependency>
                <groupId>org.conventionsframework</groupId>
                <artifactId>conventions-core</artifactId>
                <version>0.9.7</version>
            </dependency>
            <!-- end conventions -->
            <!-- primefaces -->
            <dependency>
                <groupId>org.primefaces</groupId>
                <artifactId>primefaces</artifactId>
                <version>3.4</version>
            </dependency>
            <dependency>
                <groupId>org.primefaces.extensions</groupId>
                <artifactId>primefaces-extensions</artifactId>
                <version>0.6.0</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.primefaces</groupId>
                        <artifactId>primefaces</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- end primefaces -->
            
            <!-- hibernate --> 
            <dependency>
                <groupId>org.hibernate.javax.persistence</groupId>
                <artifactId>hibernate-jpa-2.0-api</artifactId>
                <version>1.0.1.Final</version>
            </dependency>
        
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-entitymanager</artifactId>
                <version>4.1.5-Final</version>
            </dependency>
                
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>4.1.5-Final</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>4.3.0.Final</version>
            </dependency>

            <!-- end hibernate --> 

            <dependency>
                <groupId>org.javassist</groupId>
                <artifactId>javassist</artifactId>
                <version>3.14.0-GA</version>
            </dependency>
                
                
            <!-- Logging -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>1.5.10</version>
            </dependency>
        
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>1.1.1</version>
            </dependency>
            <!-- end Logging -->
            <dependency>
                  <groupId>org.apache.commons</groupId>
                  <artifactId>commons-lang3</artifactId>
                  <version>3.1</version>
            </dependency>
            <!--themes -->
            <dependency>
                <groupId>org.primefaces.extensions</groupId>
                <artifactId>all-themes</artifactId>
                <version>${primefaces.theme.version}</version>
                <scope>runtime</scope>
            </dependency>
            <!-- end themes -->
]]>
            </programlisting>
            <para>
                Note that half of them are JavaEE dependencies and are provided by an application server
                so they are declared as provided maven scope.
            </para>
            <para>
                Above is an explanation of the use of the main dependencies 
            </para>
            <variablelist>
                <varlistentry>
                    <term>
                        <code>org.primefaces:primefaces</code>
                    </term>
                    <listitem>Used by conventions UI components which are described at 
                        <xref linkend="view-layer"/>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>
                        <code>
                            org.primefaces.extensions:primefaces-extensions
                        </code>
                    </term>
                    <listitem>Used by the layout template(
                        <xref linkend="layout-template"/>) so if you won use the template you dont need to declare this dependency 
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>
                        <code>org.apache.myfaces.extensions.cdi.bundles:myfaces-extcdi-bundle-jsf20</code>
                    </term>
                    <listitem>Apache Myfaces CODI is used by Non EJB based service 
                        <emphasis>CustomHibernateService</emphasis> (
                        <xref linkend="custom-service"/>)  
                        for transaction demarcation with 
                        <code>@Transactional</code> annotation, so if you're not using a CustomService you dont need to declare this dependency.
                        <tip>
                            CODI scopes are also very handy and widly used in conventions sample projects, you may take a look here "TODO link to codi scopes"
                        </tip>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>
                        <code>org.hibernate:hibernate</code>
                    </term>
                    <listitem>Hibernate is used as JPA provider
                        <important>
                            Conventions is highly dependent on Hibernate 
                            <emphasis>4.x API</emphasis>
                        </important>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>
                        <code>org.apache.commons:commons-lang3</code>
                    </term>
                    <listitem> 
                        Apache commons lang3 is used by exception handler to show friendly error messages so if dont use exception handler you dont need this dependency 
                    </listitem>
                </varlistentry>
            </variablelist>
        </section>
        <section>
            <title> 
                <code>conventions-bom</code>
            </title>
            <para>The BOM(Bill of materials) for Conventions framework specifies the versions of each Conventions related dependencies so if you are using Maven 3, you can easily import conventions-bom into your POM by declaring the following in your depdendencyManagement section:</para>
            <programlisting role="XML"><![CDATA[         

        <dependencyManagement> 
            <dependencies>        
                <dependency>
                    <groupId>org.conventionsframework</groupId>
                    <artifactId>conventions-bom</artifactId>
                    <version>0.9.7</version>
                    <type>pom</type>
                    <scope>import</scope>
                 </dependency>
            </dependencies>
        <dependencyManagement>                 
]]>
            </programlisting>
            <para>
                now you dont have to worry about dependency version, you just need to declare 
                the groupId and artifactId of each dependency we described in 
                <xref linkend="mvn-dependencies"/>. The Conventions showcase is using the bom, take a look 
                <ulink url="https://github.com/conventions/showcase/blob/master/pom.xml">here</ulink> for an example .
            </para>
            <tip>
                you can declare the version of the dependencies, if you do so you are
                overriding the recommended versions declared in conventions-bom. 
            </tip>
        </section>
        <section>
            <title>Using maven archetype</title>
            <para>The following commands can be used to generate the Conventions archetype project:</para>
            <variablelist>
                <varlistentry>
                    <term>
                        <code>JavaEE container based archetype:</code>
                    </term>
                    <listitem> 
                        <programlisting role="XML"><![CDATA[
mvn archetype:generate -DarchetypeCatalog=https://oss.sonatype.org/content/repositories/releases/archetype-catalog.xml -DarchetypeGroupId=org.conventionsframework -DarchetypeArtifactId=conventions-archetype -DarchetypeVersion=0.9.7 
            ]]>
                        </programlisting>
                    </listitem>
                </varlistentry>
                 <varlistentry>
                    <term>
                        <code>Tomcat based archetype(since 1.0.0-SNAPSHOT):</code>
                    </term>
                    <listitem> 
                        <programlisting role="XML"><![CDATA[
mvn archetype:generate -DarchetypeCatalog=https://oss.sonatype.org/content/repositories/snapshots/archetype-catalog.xml -DarchetypeGroupId=org.conventionsframework -DarchetypeArtifactId=conventions-archetype -DarchetypeVersion=1.0.0-SNAPSHOT
            ]]>
                        </programlisting>
                         <note>Tomcat archetype is configured to use postgres datatabase
                    you can change the datatabase configuration in context.xml file locate under Web-Pages/META-INF folder  
                </note>
                    </listitem>
                </varlistentry>
          </variablelist>
            <tip> 
                <para>for snapshot archetypes you can use the following catalog url:</para>
                <para>
                    <code>
                https://oss.sonatype.org/content/repositories/snapshots/archetype-catalog.xml
                    </code>
                </para>
            </tip>
               
                <important>The archetype project is dependent on maven3</important>
                <tip>
                    <itemizedlist>
                        <listitem>
                            See  
                            <ulink url="http://youtu.be/yMDCNuGlAuQ">Conventions JavaEE server based archetype video tutorial</ulink>
                        </listitem>
                        <listitem>
                            See 
                            <ulink url="http://youtu.be/YumFZCrfWDk">conventions Tomcat based archetype video tutorial</ulink>
                        </listitem>
                    </itemizedlist>

                </tip>
        </section>
        <section>
            <title>Clone the archetype project</title>
            <para>The archetype projects are available at github
                <ulink url="https://github.com/conventions/archetype-project">JavaEE based archetype</ulink> and
                <ulink url="https://github.com/conventions/archetype-tomcat-project">Tomcat based archetype</ulink>
                they are maven based project so clone them into your IDE of choice, clean build and deploy and you're started with 
                <emphasis>Conventions framework</emphasis>.
            </para>
        </section>
    </section>
   
    
    <section>
        <title>Without maven</title>
        <para>If dont use maven you can download a zip with all conventions dependencies, here are the links:</para>
        <variablelist>
            <varlistentry>
                <term>
                    <code>Conventions JavaEE 6(+) Server dependencies</code>
                </term>
                <listitem> 
                    <ulink url="https://github.com/downloads/conventions/core/conventions-dependencies-0.9.7.zip"> Download here</ulink> the zip file with all dependencies for Conventions framework
                    based on a JavaEE 6(+) Application Server such as Glassfish or JBossAs7.x
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>
                    <code>Conventions Tomcat dependencies with OpenWebBeans</code>
                </term>
                <listitem> 
                    <ulink url="https://github.com/downloads/conventions/core/conventions-dependencies-tomcat-owb-0.9.7.zip"> Download here</ulink> the zip file with all dependencies for Conventions framework
                    based on tomcat with 
                    <emphasis>OpenWebBeans</emphasis> as context and depency injection provider.
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>
                    <code>Conventions Tomcat dependencies with Weld</code>
                </term>
                <listitem> 
                    <ulink url="https://github.com/downloads/conventions/core/conventions-dependencies-0.9.7-tomcat-weld.zip"> Download here</ulink> the zip file with all dependencies for Conventions framework
                    based on tomcat with 
                    <emphasis>Weld</emphasis> as context and depency injection provider.
                </listitem>
            </varlistentry>
        </variablelist>
    </section>
    <section>
        <title>Scaffolding</title>
        <para>TODO link to section which describes the new-project command.</para>
    </section>
   
</chapter>
